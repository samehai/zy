plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.hibernate.orm' version '6.1.6.Final'
	id 'org.graalvm.buildtools.native' version '0.9.18'
}

group = 'com.zy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '19'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	mavenLocal()
}

ext {
	lombokVersion = "1.18.26"
	mapstructVersion = "1.5.3.Final"
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-configuration-processor
	implementation 'org.springframework.boot:spring-boot-configuration-processor'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools
	implementation 'org.springframework.boot:spring-boot-devtools'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-aop
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	testImplementation 'junit:junit:4.13.1'
//	implementation 'org.springframework.session:spring-session-data-redis'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
//	runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
	// https://mvnrepository.com/artifact/com.microsoft.sqlserver/mssql-jdbc
	implementation 'com.microsoft.sqlserver:mssql-jdbc:11.2.2.jre18'

	// https://mvnrepository.com/artifact/org.postgresql/postgresql
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.postgresql:postgresql:42.5.1'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework:spring-webflux'
	testImplementation 'org.springframework.graphql:spring-graphql-test'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-log4j2
//	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	// https://mvnrepository.com/artifact/org.slf4j/slf4j-api
	implementation 'org.slf4j:slf4j-api:2.0.6'
	// https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
	implementation 'org.apache.logging.log4j:log4j-core:2.19.0'
	// https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12
	testImplementation 'org.slf4j:slf4j-log4j12:2.0.6'

	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	// https://mvnrepository.com/artifact/io.swagger.core.v3/swagger-annotations
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.7'
	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
//	implementation 'io.springfox:springfox-swagger-ui:3.0.0'
	// https://mvnrepository.com/artifact/io.springfox/springfox-boot-starter
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	// https://mvnrepository.com/artifact/com.alibaba/druid-spring-boot-starter
	//implementation 'com.alibaba:druid-spring-boot-starter:1.2.15'

	// https://mvnrepository.com/artifact/org.projectlombok/lombok
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
	testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	// https://mvnrepository.com/artifact/org.graalvm.buildtools/native-gradle-plugin
	implementation 'org.graalvm.buildtools:native-gradle-plugin:0.9.19'

}

tasks.named('test') {
	useJUnitPlatform()
}

hibernate {
	enhancement {
		lazyInitialization true
		dirtyTracking true
		associationManagement true
	}
}

tasks.withType(JavaCompile) {
	options.compilerArgs = [
//			'-Amapstruct.suppressGeneratorTimestamp=true',
//			'-Amapstruct.suppressGeneratorVersionInfoComment=true',
//			'-Amapstruct.verbose=true'
	]
}

test {
	useTestNG()
}